x-common-deploy: &common-deploy
  restart_policy:
    condition: on-failure
    max_attempts: 3
  update_config:
    parallelism: 1
    order: stop-first

x-common-timezone: &common-timezone
  environment:
    - TZ=Australia/Brisbane

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./backend/proxy/certs:/etc/nginx/certs:rw
      - ./backend/proxy/vhost.d:/etc/nginx/vhost.d
      - ./backend/proxy/html:/usr/share/nginx/html
      - ./backend/proxy/dhparam:/etc/nginx/dhparam
      - ./backend/nginx-proxy-config:/etc/nginx/conf.d
    networks:
      - melodygenerator-net
    deploy: *common-deploy
    <<: *common-timezone

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backend/proxy/acme:/etc/acme.sh
      - ./backend/proxy/certs:/etc/nginx/certs:rw
    environment:
      - DEFAULT_EMAIL=dev@niall.one
    networks:
      - melodygenerator-net
    depends_on:
      - nginx-proxy
    <<: *common-timezone

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:4050
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - FAST_REFRESH=false
      - VIRTUAL_HOST=melodygenerator.fun
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=melodygenerator.fun
    networks:
      - melodygenerator-net
    deploy: *common-deploy
    <<: *common-timezone

  api:
    build: ./backend/api
    volumes:
      - ./backend/api/app/output:/usr/src/api/app/output
      - ./models:/usr/src/api/app/model
    environment:
      - VIRTUAL_HOST=api.melodygenerator.fun
      - VIRTUAL_PORT=4050
      - LETSENCRYPT_HOST=api.melodygenerator.fun
      - PROXY_READ_TIMEOUT=300s
      - PROXY_SEND_TIMEOUT=300s
      - PROXY_CONNECT_TIMEOUT=300s
    env_file:
      - ./backend/api/.env
      - ./backend/postgres/.env
    depends_on:  
      postgres:
          condition: service_healthy
    networks:
      - melodygenerator-net
    ports:
      - "4050:4050"
    deploy: *common-deploy
    <<: *common-timezone

  model-trainer:
    build: ./model-trainer
    volumes:
      - ./backend/app/input:/app/input
      - ./models:/app/model
    environment:
      - INPUT_DIR=/app/input
      - OUTPUT_DIR=/app/model
    networks:
      - melodygenerator-net
    #platform: linux/arm64/v8
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    stdin_open: true
    tty: true
    <<: *common-timezone
  
  postgres:
    image: postgres:16
    ports:
      - 5432:5432
    volumes:
      - ./backend/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./backend/postgres/.env
    networks:
      - melodygenerator-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "melodygenerator_user", "-d", "melodygenerator_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy: *common-deploy
    <<: *common-timezone
      
volumes:
  input:
  output:
  model:
  postgres-data:

networks:
  melodygenerator-net:
    driver: bridge